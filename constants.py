import json
from pydantic import BaseModel, Field
from web3 import Web3
from fastapi.openapi.utils import get_openapi

# main_contract_address = "0x45E8c7346C5f1a21d5494E87ED6F19E1F6177dC2" # This is the main contract address deployed in goerli
wallet_address = "0xb5b5FF0987067f166169f082c174402277987f35" # You can replace this address with your own public address
private_key = "04910f1bed2f8ea83b422f58b4a5bc8602cf11f283c29be63d77d994310ed61e" # You can replace it with your own private key
infura_api = "" # Create your own infura api key and put the endpoint here (Put the endpoint for goerli network)

# Dont make any changes to the abi and byte code

abi = json.loads('[ { "constant": true, "inputs": [], "name": "getVotingDetails", "outputs": [ { "name": "", "type": "string" }, { "name": "", "type": "string" }, { "name": "", "type": "int256" }, { "name": "", "type": "int256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "name": "candidate", "type": "string" }, { "name": "castId", "type": "int256" } ], "name": "castVote", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getLiveCount", "outputs": [ { "name": "", "type": "int256[]" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getPollStatus", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "hasUserVoted", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getPollResult", "outputs": [ { "name": "", "type": "string" }, { "name": "", "type": "int256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getOptionList", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "inputs": [ { "name": "_options", "type": "bytes32[]" }, { "name": "_votingTitle", "type": "string" }, { "name": "_maxVoteAllowed", "type": "int256" } ], "payable": false, "stateMutability": "nonpayable", "type": "constructor" } ]')

byte_code = ""
web3 = Web3(Web3.HTTPProvider(infura_api))


def init_contract():
    return web3.eth.contract(abi=abi, bytecode=byte_code)

def get_contract(contract : str):
    contract = web3.toChecksumAddress(contract)
    contract_instance = web3.eth.contract(address=contract, abi=abi)
    return contract_instance
